#!/usr/bin/env python
from TwitterAPI import TwitterAPI, TwitterConnectionError
from webgis import twitter, Session
import os, sys

# Define API keys
CONSUMER_KEY = os.getenv("CONSUMER_KEY")
CONSUMER_SECRET = os.getenv("CONSUMER_SECRET")
ACCESS_TOKEN_KEY = os.getenv("ACCESS_TOKEN_KEY")
ACCESS_TOKEN_SECRET = os.getenv("ACCESS_TOKEN_SECRET")

# Define bounding box
bbox = "-80.244,42.835,-75.531,45.606"

# Make sure API key environment vars are present
if CONSUMER_KEY == None:
    sys.exit("ERROR: CONSUMER_KEY is not set")
    
if CONSUMER_SECRET == None:
    sys.exit("ERROR: CONSUMER_SECRET is not set")
    
if ACCESS_TOKEN_KEY == None:
    sys.exit("ERROR: ACCESS_TOKEN_KEY is not set")
    
if ACCESS_TOKEN_SECRET == None:
    sys.exit("ERROR: ACCESS_TOKEN_SECRET is not set")

api = TwitterAPI(CONSUMER_KEY,
                 CONSUMER_SECRET,
                 ACCESS_TOKEN_KEY,
                 ACCESS_TOKEN_SECRET)
                 
session = Session()

while True:
    try:
        # Get an API handler
        r = api.request("statuses/filter", {"locations": bbox})

        for item in r:
            if item["coordinates"] is not None:
                twitter.add_to_database(item, session)
            elif "disconnect" in item:
                pass

    except TwitterConnectionError as e:
        # Connection error - retry request
        pass